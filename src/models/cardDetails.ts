/**
 * Paypal Merged APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import {
  CardExperienceContext,
  cardExperienceContextSchema,
} from './cardExperienceContext';
import { NetworkToken, networkTokenSchema } from './networkToken';
import {
  StoredPaymentSource,
  storedPaymentSourceSchema,
} from './storedPaymentSource';

export interface CardDetails {
  /** The PayPal-generated ID for the saved card payment source. Typically stored on the merchant's server. */
  vaultId?: string;
  /** Provides additional details to process a payment using a `payment_source` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).<br/>Parameter compatibility:<br/>`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`. `usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`. `previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`. Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request. */
  storedCredential?: StoredPaymentSource;
  /** A 3rd party network token refers to a network token that the merchant provisions from and vaults with an external TSP (Token Service Provider) other than PayPal. */
  networkToken?: NetworkToken;
  /** Customizes the payer experience during the 3DS Approval for payment. */
  experienceContext?: CardExperienceContext;
}

export const cardDetailsSchema: Schema<CardDetails> = object({
  vaultId: ['vault_id', optional(string())],
  storedCredential: [
    'stored_credential',
    optional(lazy(() => storedPaymentSourceSchema)),
  ],
  networkToken: ['network_token', optional(lazy(() => networkTokenSchema))],
  experienceContext: [
    'experience_context',
    optional(lazy(() => cardExperienceContextSchema)),
  ],
});

/**
 * Paypal Merged APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import { PartyName, partyNameSchema } from './partyName';
import {
  PayPalWalletAttributes,
  payPalWalletAttributesSchema,
} from './payPalWalletAttributes';
import {
  PayPalWalletExperienceContext,
  payPalWalletExperienceContextSchema,
} from './payPalWalletExperienceContext';
import { PhoneWithType, phoneWithTypeSchema } from './phoneWithType';
import {
  PortableInternationalPostalAddress,
  portableInternationalPostalAddressSchema,
} from './portableInternationalPostalAddress';
import { TaxInformation, taxInformationSchema } from './taxInformation';

/** A resource that identifies a PayPal Wallet is used for payment. */
export interface PayPalWallet {
  /** The PayPal-generated ID for the payment_source stored within the Vault. */
  vaultId?: string;
  /** The email address of the PayPal account holder. */
  emailAddress?: string;
  /** The name of the PayPal account holder. Supports only the `given_name` and `surname` properties. */
  name?: PartyName;
  /** The phone number of the customer. Available only when you enable the **Contact Telephone Number** option in the <a href="https://www.paypal.com/cgi-bin/customerprofileweb?cmd=_profile-website-payments">**Profile & Settings**</a> for the merchant's PayPal account. The `phone.phone_number` supports only `national_number`. */
  phone?: PhoneWithType;
  /** The birth date of the PayPal account holder in `YYYY-MM-DD` format. */
  birthDate?: string;
  /** The tax information of the PayPal account holder. Required only for Brazilian PayPal account holder's. Both `tax_id` and `tax_id_type` are required. */
  taxInfo?: TaxInformation;
  /** The address of the payer. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties. Also referred to as the billing address of the customer. */
  address?: PortableInternationalPostalAddress;
  /** Additional attributes associated with the use of this wallet. */
  attributes?: PayPalWalletAttributes;
  /** Customizes the payer experience during the approval process for payment with PayPal.<blockquote><strong>Note:</strong> Partners and Marketplaces might configure <code>brand_name</code> and <code>shipping_preference</code> during partner account setup, which overrides the request values.</blockquote> */
  experienceContext?: PayPalWalletExperienceContext;
  /** The PayPal billing agreement ID. References an approved recurring payment for goods or services. */
  billingAgreementId?: string;
}

export const payPalWalletSchema: Schema<PayPalWallet> = object({
  vaultId: ['vault_id', optional(string())],
  emailAddress: ['email_address', optional(string())],
  name: ['name', optional(lazy(() => partyNameSchema))],
  phone: ['phone', optional(lazy(() => phoneWithTypeSchema))],
  birthDate: ['birth_date', optional(string())],
  taxInfo: ['tax_info', optional(lazy(() => taxInformationSchema))],
  address: [
    'address',
    optional(lazy(() => portableInternationalPostalAddressSchema)),
  ],
  attributes: [
    'attributes',
    optional(lazy(() => payPalWalletAttributesSchema)),
  ],
  experienceContext: [
    'experience_context',
    optional(lazy(() => payPalWalletExperienceContextSchema)),
  ],
  billingAgreementId: ['billing_agreement_id', optional(string())],
});

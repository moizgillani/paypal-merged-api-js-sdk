/**
 * Merged ApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema } from '../schema';
import {
  OrderTrackerResponse,
  orderTrackerResponseSchema,
} from './orderTrackerResponse';
import { PartyName, partyNameSchema } from './partyName';
import {
  PortableInternationalPostalAddress,
  portableInternationalPostalAddressSchema,
} from './portableInternationalPostalAddress';
import { ShippingOption, shippingOptionSchema } from './shippingOption';
import { ShippingType1Enum, shippingType1EnumSchema } from './shippingType1Enum';

/** The order shipping details. */
export interface OrderShippingDetails {
  /** The name of the person to whom to ship the items. Supports only the `full_name` property. */
  name?: PartyName;
  /** The method by which the payer wants to get their items from the payee e.g shipping, in-person pickup. Either type or options but not both may be present. */
  type?: ShippingType1Enum;
  /** An array of shipping options that the payee or merchant offers to the payer to ship or pick up their items. */
  options?: ShippingOption[];
  /** The address of the payer. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties. Also referred to as the billing address of the customer. */
  address?: PortableInternationalPostalAddress;
  /** An array of trackers for a transaction. */
  trackers?: OrderTrackerResponse[];
}

export const orderShippingDetailsSchema: Schema<OrderShippingDetails> = object({
  name: ['name', optional(lazy(() => partyNameSchema))],
  type: ['type', optional(shippingType1EnumSchema)],
  options: ['options', optional(array(lazy(() => shippingOptionSchema)))],
  address: [
    'address',
    optional(lazy(() => portableInternationalPostalAddressSchema)),
  ],
  trackers: [
    'trackers',
    optional(array(lazy(() => orderTrackerResponseSchema))),
  ],
});

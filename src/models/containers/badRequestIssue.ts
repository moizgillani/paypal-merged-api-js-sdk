/**
 * Paypal Merged APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, Schema, validateAndMap } from '../../schema';
import {
  INVALIDARRAYMAXITEMS,
  iNVALIDARRAYMAXITEMSSchema,
} from '../iNVALIDARRAYMAXITEMS';
import {
  INVALIDARRAYMINITEMS,
  iNVALIDARRAYMINITEMSSchema,
} from '../iNVALIDARRAYMINITEMS';
import {
  INVALIDCOUNTRYCODE,
  iNVALIDCOUNTRYCODESchema,
} from '../iNVALIDCOUNTRYCODE';
import {
  INVALIDPARAMETERSYNTAX,
  iNVALIDPARAMETERSYNTAXSchema,
} from '../iNVALIDPARAMETERSYNTAX';
import {
  INVALIDPARAMETERVALUE,
  iNVALIDPARAMETERVALUESchema,
} from '../iNVALIDPARAMETERVALUE';
import {
  INVALIDSTRINGLENGTH,
  iNVALIDSTRINGLENGTHSchema,
} from '../iNVALIDSTRINGLENGTH';
import {
  MALFORMEDREQUESTJSON,
  mALFORMEDREQUESTJSONSchema,
} from '../mALFORMEDREQUESTJSON';
import {
  MISSINGREQUIREDPARAMETER,
  mISSINGREQUIREDPARAMETERSchema,
} from '../mISSINGREQUIREDPARAMETER';
import { NOTSUPPORTED, nOTSUPPORTEDSchema } from '../nOTSUPPORTED';
import {
  PAYPALREQUESTIDREQUIRED,
  pAYPALREQUESTIDREQUIREDSchema,
} from '../pAYPALREQUESTIDREQUIRED';

/** This is a container type for any-of types. */
export type BadRequestIssue = INVALIDARRAYMAXITEMS | INVALIDARRAYMINITEMS | INVALIDCOUNTRYCODE | INVALIDPARAMETERSYNTAX | INVALIDSTRINGLENGTH | INVALIDPARAMETERVALUE | MISSINGREQUIREDPARAMETER | NOTSUPPORTED | PAYPALREQUESTIDREQUIRED | MALFORMEDREQUESTJSON;

export const badRequestIssueSchema: Schema<BadRequestIssue> = anyOf([
  iNVALIDARRAYMAXITEMSSchema,
  iNVALIDARRAYMINITEMSSchema,
  iNVALIDCOUNTRYCODESchema,
  iNVALIDPARAMETERSYNTAXSchema,
  iNVALIDSTRINGLENGTHSchema,
  iNVALIDPARAMETERVALUESchema,
  mISSINGREQUIREDPARAMETERSchema,
  nOTSUPPORTEDSchema,
  pAYPALREQUESTIDREQUIREDSchema,
  mALFORMEDREQUESTJSONSchema,
]);

export namespace BadRequestIssue {
  /**
  * Validation method to narrow down union type to INVALIDARRAYMAXITEMS type case.
  *
  * This is INVALID_ARRAY_MAX_ITEMS case.
  */
  export function isINVALIDARRAYMAXITEMS(value: unknown): value is INVALIDARRAYMAXITEMS {
    const validationResult = validateAndMap(value, iNVALIDARRAYMAXITEMSSchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to INVALIDARRAYMINITEMS type case.
  *
  * This is INVALID_ARRAY_MIN_ITEMS case.
  */
  export function isINVALIDARRAYMINITEMS(value: unknown): value is INVALIDARRAYMINITEMS {
    const validationResult = validateAndMap(value, iNVALIDARRAYMINITEMSSchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to INVALIDCOUNTRYCODE type case.
  *
  * This is INVALID_COUNTRY_CODE case.
  */
  export function isINVALIDCOUNTRYCODE(value: unknown): value is INVALIDCOUNTRYCODE {
    const validationResult = validateAndMap(value, iNVALIDCOUNTRYCODESchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to INVALIDPARAMETERSYNTAX type case.
  *
  * This is INVALID_PARAMETER_SYNTAX case.
  */
  export function isINVALIDPARAMETERSYNTAX(value: unknown): value is INVALIDPARAMETERSYNTAX {
    const validationResult = validateAndMap(value, iNVALIDPARAMETERSYNTAXSchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to INVALIDSTRINGLENGTH type case.
  *
  * This is INVALID_STRING_LENGTH case.
  */
  export function isINVALIDSTRINGLENGTH(value: unknown): value is INVALIDSTRINGLENGTH {
    const validationResult = validateAndMap(value, iNVALIDSTRINGLENGTHSchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to INVALIDPARAMETERVALUE type case.
  *
  * This is INVALID_PARAMETER_VALUE case.
  */
  export function isINVALIDPARAMETERVALUE(value: unknown): value is INVALIDPARAMETERVALUE {
    const validationResult = validateAndMap(value, iNVALIDPARAMETERVALUESchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to MISSINGREQUIREDPARAMETER type case.
  *
  * This is MISSING_REQUIRED_PARAMETER case.
  */
  export function isMISSINGREQUIREDPARAMETER(value: unknown): value is MISSINGREQUIREDPARAMETER {
    const validationResult = validateAndMap(value, mISSINGREQUIREDPARAMETERSchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to NOTSUPPORTED type case.
  *
  * This is NOT_SUPPORTED case.
  */
  export function isNOTSUPPORTED(value: unknown): value is NOTSUPPORTED {
    const validationResult = validateAndMap(value, nOTSUPPORTEDSchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to PAYPALREQUESTIDREQUIRED type case.
  *
  * This is PAYPAL_REQUEST_ID_REQUIRED case.
  */
  export function isPAYPALREQUESTIDREQUIRED(value: unknown): value is PAYPALREQUESTIDREQUIRED {
    const validationResult = validateAndMap(value, pAYPALREQUESTIDREQUIREDSchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to MALFORMEDREQUESTJSON type case.
  *
  * This is MALFORMED_REQUEST_JSON case.
  */
  export function isMALFORMEDREQUESTJSON(value: unknown): value is MALFORMEDREQUESTJSON {
    const validationResult = validateAndMap(value, mALFORMEDREQUESTJSONSchema);
    return validationResult.errors === false;
  }
}

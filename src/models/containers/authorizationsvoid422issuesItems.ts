/**
 * Merged ApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, Schema, validateAndMap } from '../../schema';
import { CANNOTBEVOIDED, cANNOTBEVOIDEDSchema } from '../cANNOTBEVOIDED';
import {
  PREVIOUSLYCAPTURED,
  pREVIOUSLYCAPTUREDSchema,
} from '../pREVIOUSLYCAPTURED';
import { PREVIOUSLYVOIDED, pREVIOUSLYVOIDEDSchema } from '../pREVIOUSLYVOIDED';

/** This is a container type for any-of types. */
export type Authorizationsvoid422issuesItems = PREVIOUSLYCAPTURED | PREVIOUSLYVOIDED | CANNOTBEVOIDED;

export const authorizationsvoid422issuesItemsSchema: Schema<Authorizationsvoid422issuesItems> = anyOf(
  [pREVIOUSLYCAPTUREDSchema, pREVIOUSLYVOIDEDSchema, cANNOTBEVOIDEDSchema]
);

export namespace Authorizationsvoid422issuesItems {
  /**
  * Validation method to narrow down union type to PREVIOUSLYCAPTURED type case.
  *
  * This is PREVIOUSLY_CAPTURED case.
  */
  export function isPREVIOUSLYCAPTURED(value: unknown): value is PREVIOUSLYCAPTURED {
    const validationResult = validateAndMap(value, pREVIOUSLYCAPTUREDSchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to PREVIOUSLYVOIDED type case.
  *
  * This is PREVIOUSLY_VOIDED case.
  */
  export function isPREVIOUSLYVOIDED(value: unknown): value is PREVIOUSLYVOIDED {
    const validationResult = validateAndMap(value, pREVIOUSLYVOIDEDSchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to CANNOTBEVOIDED type case.
  *
  * This is CANNOT_BE_VOIDED case.
  */
  export function isCANNOTBEVOIDED(value: unknown): value is CANNOTBEVOIDED {
    const validationResult = validateAndMap(value, cANNOTBEVOIDEDSchema);
    return validationResult.errors === false;
  }
}

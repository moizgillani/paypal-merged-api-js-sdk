/**
 * Paypal Merged APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, Schema, validateAndMap } from '../../schema';
import {
  NOTENABLEDFORCARDPROCESSING,
  nOTENABLEDFORCARDPROCESSINGSchema,
} from '../nOTENABLEDFORCARDPROCESSING';
import {
  PAYEEACCOUNTNOTVERIFIED,
  pAYEEACCOUNTNOTVERIFIEDSchema,
} from '../pAYEEACCOUNTNOTVERIFIED';
import { PERMISSIONDENIED, pERMISSIONDENIEDSchema } from '../pERMISSIONDENIED';

/** This is a container type for any-of types. */
export type ForbiddenErrorIssuesItems = PERMISSIONDENIED | NOTENABLEDFORCARDPROCESSING | PAYEEACCOUNTNOTVERIFIED;

export const forbiddenErrorIssuesItemsSchema: Schema<ForbiddenErrorIssuesItems> = anyOf(
  [
    pERMISSIONDENIEDSchema,
    nOTENABLEDFORCARDPROCESSINGSchema,
    pAYEEACCOUNTNOTVERIFIEDSchema,
  ]
);

export namespace ForbiddenErrorIssuesItems {
  /**
  * Validation method to narrow down union type to PERMISSIONDENIED type case.
  *
  * This is PERMISSION_DENIED case.
  */
  export function isPERMISSIONDENIED(value: unknown): value is PERMISSIONDENIED {
    const validationResult = validateAndMap(value, pERMISSIONDENIEDSchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to NOTENABLEDFORCARDPROCESSING type case.
  *
  * This is NOT_ENABLED_FOR_CARD_PROCESSING case.
  */
  export function isNOTENABLEDFORCARDPROCESSING(value: unknown): value is NOTENABLEDFORCARDPROCESSING {
    const validationResult = validateAndMap(value, nOTENABLEDFORCARDPROCESSINGSchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to PAYEEACCOUNTNOTVERIFIED type case.
  *
  * This is PAYEE_ACCOUNT_NOT_VERIFIED case.
  */
  export function isPAYEEACCOUNTNOTVERIFIED(value: unknown): value is PAYEEACCOUNTNOTVERIFIED {
    const validationResult = validateAndMap(value, pAYEEACCOUNTNOTVERIFIEDSchema);
    return validationResult.errors === false;
  }
}
